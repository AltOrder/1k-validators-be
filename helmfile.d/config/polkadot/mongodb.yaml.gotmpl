image:
  registry: docker.io
  repository: bitnami/mongodb
  tag: 4.4.2-debian-10-r0
  pullPolicy: IfNotPresent
  debug: false

clusterDomain: cluster.local
architecture: replicaset
useStatefulSet: true

auth:
  enabled: true
  rootPassword: {{ env "POLKADOT_MONGO_ROOT_PASSWORD" | default "root123123" }}
  username: {{ env "POLKADOT_MONGO_USERNAME" | default "username" }}
  password: {{ env "POLKADOT_MONGO_PASSWORD" | default "password123" }}
  database: {{ env "POLKADOT_MONGO_DB" | default "db" }}
  replicaSetKey: {{ env "POLKADOT_MONGO_RS_KEY" | default "rskey123456789" }}

tls:
  enabled: false

replicaSetName: rs0
replicaSetHostnames: true

directoryPerDB: false
systemLogVerbosity: 0
disableSystemLog: false

## MongoDB configuration file for Primary and Secondary nodes. For documentation of all options, see:
##   http://docs.mongodb.org/manual/reference/configuration-options/
## Example:
## configuration: |-
##   # where and how to store data.
##   storage:
##     dbPath: /bitnami/mongodb/data/db
##     journal:
##       enabled: true
##     directoryPerDB: false
##   # where to write logging data
##   systemLog:
##     destination: file
##     quiet: false
##     logAppend: true
##     logRotate: reopen
##     path: /opt/bitnami/mongodb/logs/mongodb.log
##     verbosity: 0
##   # network interfaces
##   net:
##     port: 27017
##     unixDomainSocket:
##       enabled: true
##       pathPrefix: /opt/bitnami/mongodb/tmp
##     ipv6: false
##     bindIpAll: true
##   # replica set options
##   #replication:
##     #replSetName: replicaset
##     #enableMajorityReadConcern: true
##   # process management options
##   processManagement:
##      fork: false
##      pidFilePath: /opt/bitnami/mongodb/tmp/mongodb.pid
##   # set parameter options
##   setParameter:
##      enableLocalhostAuthBypass: true
##   # security options
##   security:
##     authorization: disabled
##     #keyFile: /opt/bitnami/mongodb/conf/keyfile
##
configuration: ""

## ConfigMap with MongoDB configuration for Primary and Secondary nodes
## NOTE: When it's set the arbiter.configuration parameter is ignored
##
# existingConfigmap:


annotations: {}
labels: {}
replicaCount: 2
strategyType: RollingUpdate
podManagementPolicy: OrderedReady
affinity: {}
nodeSelector: {}
podLabels: {}
podAnnotations: {}

podSecurityContext:
  enabled: true
  fsGroup: 1001
  ## sysctl settings
  ## Example:
  ## sysctls:
  ## - name: net.core.somaxconn
  ##   value: "10000"
  ##
  sysctls: []

containerSecurityContext:
  enabled: true
  runAsUser: 1001
  runAsNonRoot: true

resources:
  limits: 
    cpu: 100m
    memory: 128Mi
  requests: 
    cpu: 100m
    memory: 128Mi

livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
readinessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

extraVolumeMounts: []
extraVolumes: []

pdb:
  create: false
  minAvailable: 1
  maxUnavailable: 1

persistence:
  enabled: true
  storageClass: "standard"
  accessModes:
    - ReadWriteOnce
  size: 8Gi
  annotations: {}
  mountPath: /bitnami/mongodb
  subPath: ""


service:
  type: ClusterIP
  port: 27017
  portName: mongodb
  nodePort: ""

externalAccess:
  enabled: false

arbiter:
  enabled: true
  configuration: ""
  # existingConfigmap:
  annotations: {}
  labels: {}
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}

  podSecurityContext:
    enabled: true
    fsGroup: 1001
    ## sysctl settings
    ## Example:
    ## sysctls:
    ## - name: net.core.somaxconn
    ##   value: "10000"
    ##
    sysctls: []

  containerSecurityContext:
    enabled: true
    runAsUser: 1001

  resources:
    limits: 
      cpu: 100m
      memory: 128Mi
    requests: 
      cpu: 100m
      memory: 128Mi

  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  pdb:
    create: false
    minAvailable: 1

serviceAccount:
  create: true

rbac:
  create: false

metrics:
  enabled: true
  image:
    registry: docker.io
    repository: bitnami/mongodb-exporter
    tag: 0.11.2-debian-10-r44
    pullPolicy: IfNotPresent

  resources:
    limits: 
      cpu: 100m
      memory: 128Mi
    requests: 
      cpu: 100m
      memory: 128Mi

  service:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9216"
      prometheus.io/path: "/metrics"
    type: ClusterIP
    port: 9216

  livenessProbe:
    enabled: true
    initialDelaySeconds: 15
    periodSeconds: 5
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1


